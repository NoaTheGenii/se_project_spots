!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-btn",inactiveButtonClass:"modal__save-btn_disabled",inputErrorClass:"modal__input_invalid",errorClass:"modal__error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},o=e=>{e.disabled=!0},n=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?(t.classList.add(r.inactiveButtonClass),o(t)):(t.classList.remove(r.inactiveButtonClass),(e=>{e.disabled=!1})(t))},a=e=>{document.querySelectorAll(e.formSelector).forEach(t=>{((e,t)=>{const o=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n(o,a,t),o.forEach(c=>{c.addEventListener("input",function(){n(o,a,t),((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,t,t.validationMessage,o)})(e,c,t)})})})(t,e)})},c=(e,t,o)=>{t.forEach(t=>{r(e,t,o)})};a(t);var s=e+"8650253b58b46f0f1c06.svg",d=e+"ebe4a21ad964c3f377bb.png",l=e+"d423b294ea8188f53fb6.svg",i=e+"d0d66fed7ed9e2c3e979.svg",u=e+"a326e1ad56a2cd944a28.svg",m=e+"d73f076c46eb5467f5fc.svg";const f=document.querySelector("#header-logo"),v=document.querySelector("#bessie-colman-avatar"),_=document.querySelector("#profile-avatar-btn"),h=document.querySelector("#profile-edit-btn"),p=document.querySelector("#profile-add-btn"),b=document.querySelector("#edit-profile-close-btn"),y=document.querySelector("#add-post-close-btn"),S=document.querySelector("#avatar-close-btn");f.src=s,v.src=d,_.src=m,h.src=l,p.src=i,b.src=u,y.src=u,S.src=u;const q=document.querySelectorAll(".modal__close-btn"),E=document.querySelectorAll(".modal"),g=document.querySelector("#edit-profile-modal"),C=document.forms.editProfile,L=g.querySelector("#profile-name-input"),k=g.querySelector("#profile-job-input"),A=document.querySelector(".profile__edit-btn"),$=document.querySelector(".profile__name"),j=document.querySelector(".profile__text"),U=document.querySelector("#add-post-modal"),I=document.querySelector(".modal__save-btn"),P=document.forms.addPost,x=P.elements.link,B=P.elements.caption,D=document.querySelector("#card-template"),w=document.querySelector(".cards__list"),T=document.querySelector(".profile__add-img"),N=(document.querySelector(".card__button-delete"),document.querySelector("#preview-modal")),H=N.querySelector(".modal__caption"),J=N.querySelector(".modal__img"),O=document.querySelector("#avatar-modal"),z=document.querySelector(".profile__avatar-btn"),M=document.forms.changeAvatar,F=M.elements.avatar,G=document.querySelector("#delete-modal"),K=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}getUserInfo(){return fetch(`${this._baseUrl}/users`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a90bdb36-e55c-4a6c-9bf2-6ab2312d2f70","Content-Type":"application/json"}});function Q(e){e.target.classList.toggle("card__btn-heart_filled")}function R(e){const t=D.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__paragraph"),o=t.querySelector(".card__image"),n=t.querySelector(".card__btn-heart"),a=t.querySelector(".card__button-delete");return r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",Q),a.addEventListener("click",e=>{e.preventDefault(),X(G),K.deleteCard(undefined).then(()=>{undefined.remove()}).catch(console.error)}),o.addEventListener("click",()=>{X(N),J.src=e.link,J.alt=e.name,H.textContent=e.name}),t}function V(e){Y(e.target)}function W(e){"Escape"!==e.key&&27!==e.key||Y(document.querySelector(".modal_opened"))}function X(e){e.classList.add("modal_opened"),document.addEventListener("keydown",W)}function Y(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",W)}K.getAppInfo().then(([e])=>{e.forEach(e=>{const t=R(e);return w.prepend(t)})}).catch(console.error),q.forEach(e=>{const t=e.closest(".modal");e.addEventListener("click",()=>Y(t))}),E.forEach(e=>{e.addEventListener("click",V)}),A.addEventListener("click",()=>{L.value=$.textContent,k.value=j.textContent,c(C,[L,k],t),X(g)}),C.addEventListener("submit",function(e){e.preventDefault(),K.editUserInfo({name:L.value,about:k.value}).then(e=>{$.textContent=e.name,j.textContent=e.about}).catch(console.error),Y(g)}),T.addEventListener("click",()=>{X(U)}),P.addEventListener("submit",function(e){e.preventDefault();const t=R({name:B.value,link:x.value});w.prepend(t),P.reset(),o(I),Y(U)}),z.addEventListener("click",()=>{X(O),c(M,[F],t)}),M.addEventListener("submit",function(e){e.preventDefault(),K.editAvatarInfo(F.value).then(e=>{v.src=e.avatar,v.alt="Avatar of "+e.name}).catch(console.error),Y(O),M.reset()}),a(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,